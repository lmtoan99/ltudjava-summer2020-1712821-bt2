/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package view;

import DAO.MonHocDAO;
import DAO.SinhVienDAO;
import DAO.TkbLopDAO;
import DAO.TkbSVDAO;
import DAO.UserGiaoVuDAO;
import DAO.UserSVDAO;
import java.io.BufferedReader;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.IOException;
import java.util.List;
import java.util.Stack;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFileChooser;
import javax.swing.JFrame;
import javax.swing.JPanel;
import javax.swing.filechooser.FileNameExtensionFilter;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;
import model.LopMon;
import pojo.MonHoc;
import pojo.SinhVien;
import pojo.TkbLop;
import pojo.TkbSV;
import pojo.UserGiaoVu;
import pojo.UserSV;

/**
 *
 * @author toanm
 */
public class MenuGiaoVu extends javax.swing.JFrame {
    /**
     * Creates new form MenuGiaoVu
     */
    private JPanel current_panel = null;
    public MenuGiaoVu() {
        initComponents();
        importDsLopPanel.setVisible(false);
        xemDsLopPanel.setVisible(false);
        importTkbPanel.setVisible(false);
        xemTkbPanel.setVisible(false);
        changePasswdPanel.setVisible(false);
        importBangDiemPanel.setVisible(false);
        xemBangDiemPanel.setVisible(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        changePasswdPanel = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        currentPasswd = new javax.swing.JPasswordField();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        newPasswd1 = new javax.swing.JPasswordField();
        jLabel6 = new javax.swing.JLabel();
        newPasswd2 = new javax.swing.JPasswordField();
        changePasswdSubmit = new javax.swing.JButton();
        notify_changePasswd = new javax.swing.JLabel();
        importDsLopPanel = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        chooseFileBtn = new javax.swing.JButton();
        fileNameLabel = new javax.swing.JLabel();
        importDsLopSubmit = new javax.swing.JButton();
        importTkbPanel = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        chooseFileTkb = new javax.swing.JButton();
        fileNameTkb = new javax.swing.JLabel();
        importTkbSubmit = new javax.swing.JButton();
        xemTkbPanel = new javax.swing.JPanel();
        TkbComboBox = new javax.swing.JComboBox<>();
        xemTkbBtn = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        TkbTable = new javax.swing.JTable();
        importBangDiemPanel = new javax.swing.JPanel();
        jLabel7 = new javax.swing.JLabel();
        chooseFileBangDiem = new javax.swing.JButton();
        fileNameBangDiem = new javax.swing.JLabel();
        importBangDiemSubmit = new javax.swing.JButton();
        notify_importDiem = new javax.swing.JLabel();
        xemBangDiemPanel = new javax.swing.JPanel();
        bangDiemComboBox = new javax.swing.JComboBox<>();
        bangDiemBtn = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        bangDiemTable = new javax.swing.JTable();
        xemDsLopPanel = new javax.swing.JPanel();
        DsLopComboBox = new javax.swing.JComboBox<>();
        xemDsLopSubmit = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        dsLopTable = new javax.swing.JTable();
        jMenuBar1 = new javax.swing.JMenuBar();
        dsLopBtn = new javax.swing.JMenu();
        dsLopBtn_import = new javax.swing.JMenuItem();
        dsLopBtn_xem = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();
        jMenuItem1 = new javax.swing.JMenuItem();
        jMenuItem2 = new javax.swing.JMenuItem();
        jMenuItem3 = new javax.swing.JMenuItem();
        jMenuItem4 = new javax.swing.JMenuItem();
        tkbBtn = new javax.swing.JMenu();
        tkbBtn_import = new javax.swing.JMenuItem();
        tkbBtn_view = new javax.swing.JMenuItem();
        jMenu1 = new javax.swing.JMenu();
        bangDiem_import = new javax.swing.JMenuItem();
        bangDiem_view = new javax.swing.JMenuItem();
        jMenu3 = new javax.swing.JMenu();
        jMenuItem5 = new javax.swing.JMenuItem();
        jMenuItem6 = new javax.swing.JMenuItem();
        changePasswd = new javax.swing.JMenu();

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel3.setText("Đổi mật khẩu");

        jLabel4.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel4.setText("Mật khẩu hiện tại");

        jLabel5.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel5.setText("Mật khẩu mới");

        jLabel6.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel6.setText("Xác nhận mật khẩu mới");

        changePasswdSubmit.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        changePasswdSubmit.setText("Xác nhân");
        changePasswdSubmit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                changePasswdSubmitActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout changePasswdPanelLayout = new javax.swing.GroupLayout(changePasswdPanel);
        changePasswdPanel.setLayout(changePasswdPanelLayout);
        changePasswdPanelLayout.setHorizontalGroup(
            changePasswdPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(changePasswdPanelLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(changePasswdPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, changePasswdPanelLayout.createSequentialGroup()
                        .addGroup(changePasswdPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel5, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel4, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, 170, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(changePasswdPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(currentPasswd, javax.swing.GroupLayout.DEFAULT_SIZE, 195, Short.MAX_VALUE)
                            .addComponent(newPasswd1)
                            .addComponent(newPasswd2))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, changePasswdPanelLayout.createSequentialGroup()
                        .addComponent(changePasswdSubmit, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(231, 231, 231))))
            .addGroup(changePasswdPanelLayout.createSequentialGroup()
                .addGroup(changePasswdPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(changePasswdPanelLayout.createSequentialGroup()
                        .addGap(130, 130, 130)
                        .addComponent(notify_changePasswd, javax.swing.GroupLayout.PREFERRED_SIZE, 264, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(changePasswdPanelLayout.createSequentialGroup()
                        .addGap(160, 160, 160)
                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 198, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(0, 164, Short.MAX_VALUE))
        );
        changePasswdPanelLayout.setVerticalGroup(
            changePasswdPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(changePasswdPanelLayout.createSequentialGroup()
                .addGap(37, 37, 37)
                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(51, 51, 51)
                .addGroup(changePasswdPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(currentPasswd, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(26, 26, 26)
                .addGroup(changePasswdPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(newPasswd1, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(changePasswdPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(newPasswd2, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(notify_changePasswd, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(26, 26, 26)
                .addComponent(changePasswdSubmit, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(140, Short.MAX_VALUE))
        );

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Import danh sách lớp");

        chooseFileBtn.setText("Chọn file");
        chooseFileBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chooseFileBtnActionPerformed(evt);
            }
        });

        importDsLopSubmit.setText("Import");
        importDsLopSubmit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                importDsLopSubmitActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout importDsLopPanelLayout = new javax.swing.GroupLayout(importDsLopPanel);
        importDsLopPanel.setLayout(importDsLopPanelLayout);
        importDsLopPanelLayout.setHorizontalGroup(
            importDsLopPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(importDsLopPanelLayout.createSequentialGroup()
                .addGroup(importDsLopPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(importDsLopPanelLayout.createSequentialGroup()
                        .addGap(30, 30, 30)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 270, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(importDsLopPanelLayout.createSequentialGroup()
                        .addGap(49, 49, 49)
                        .addComponent(chooseFileBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(59, 59, 59)
                        .addComponent(fileNameLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(importDsLopPanelLayout.createSequentialGroup()
                        .addGap(115, 115, 115)
                        .addComponent(importDsLopSubmit, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(48, Short.MAX_VALUE))
        );
        importDsLopPanelLayout.setVerticalGroup(
            importDsLopPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(importDsLopPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(36, 36, 36)
                .addGroup(importDsLopPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(chooseFileBtn, javax.swing.GroupLayout.DEFAULT_SIZE, 40, Short.MAX_VALUE)
                    .addComponent(fileNameLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addComponent(importDsLopSubmit, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(101, Short.MAX_VALUE))
        );

        importDsLopPanel.getAccessibleContext().setAccessibleName("");
        importDsLopPanel.getAccessibleContext().setAccessibleDescription("");

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("Import thời khóa biểu");

        chooseFileTkb.setText("Chọn file");
        chooseFileTkb.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chooseFileTkbActionPerformed(evt);
            }
        });

        importTkbSubmit.setText("Import");
        importTkbSubmit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                importTkbSubmitActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout importTkbPanelLayout = new javax.swing.GroupLayout(importTkbPanel);
        importTkbPanel.setLayout(importTkbPanelLayout);
        importTkbPanelLayout.setHorizontalGroup(
            importTkbPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(importTkbPanelLayout.createSequentialGroup()
                .addGroup(importTkbPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(importTkbPanelLayout.createSequentialGroup()
                        .addGap(30, 30, 30)
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 270, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(importTkbPanelLayout.createSequentialGroup()
                        .addGap(49, 49, 49)
                        .addComponent(chooseFileTkb, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(59, 59, 59)
                        .addComponent(fileNameTkb, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(importTkbPanelLayout.createSequentialGroup()
                        .addGap(115, 115, 115)
                        .addComponent(importTkbSubmit, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(48, Short.MAX_VALUE))
        );
        importTkbPanelLayout.setVerticalGroup(
            importTkbPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(importTkbPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(36, 36, 36)
                .addGroup(importTkbPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(chooseFileTkb, javax.swing.GroupLayout.DEFAULT_SIZE, 40, Short.MAX_VALUE)
                    .addComponent(fileNameTkb, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addComponent(importTkbSubmit, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(101, Short.MAX_VALUE))
        );

        xemTkbBtn.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        xemTkbBtn.setText("Xem");
        xemTkbBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                xemTkbBtnActionPerformed(evt);
            }
        });

        TkbTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "STT", "Mã môn", "Tên môn", "Phòng học"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(TkbTable);
        if (TkbTable.getColumnModel().getColumnCount() > 0) {
            TkbTable.getColumnModel().getColumn(0).setHeaderValue("STT");
            TkbTable.getColumnModel().getColumn(1).setHeaderValue("Mã môn");
            TkbTable.getColumnModel().getColumn(2).setHeaderValue("Tên môn");
            TkbTable.getColumnModel().getColumn(3).setHeaderValue("Phòng học");
        }

        javax.swing.GroupLayout xemTkbPanelLayout = new javax.swing.GroupLayout(xemTkbPanel);
        xemTkbPanel.setLayout(xemTkbPanelLayout);
        xemTkbPanelLayout.setHorizontalGroup(
            xemTkbPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(xemTkbPanelLayout.createSequentialGroup()
                .addGap(170, 170, 170)
                .addComponent(TkbComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 211, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(47, 47, 47)
                .addComponent(xemTkbBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(205, Short.MAX_VALUE))
            .addComponent(jScrollPane2)
        );
        xemTkbPanelLayout.setVerticalGroup(
            xemTkbPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(xemTkbPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(xemTkbPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(TkbComboBox, javax.swing.GroupLayout.DEFAULT_SIZE, 38, Short.MAX_VALUE)
                    .addComponent(xemTkbBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(41, 41, 41)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jLabel7.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel7.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel7.setText("Import bảng điểm");

        chooseFileBangDiem.setText("Chọn file");
        chooseFileBangDiem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chooseFileBangDiemActionPerformed(evt);
            }
        });

        importBangDiemSubmit.setText("Import");
        importBangDiemSubmit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                importBangDiemSubmitActionPerformed(evt);
            }
        });

        notify_importDiem.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N

        javax.swing.GroupLayout importBangDiemPanelLayout = new javax.swing.GroupLayout(importBangDiemPanel);
        importBangDiemPanel.setLayout(importBangDiemPanelLayout);
        importBangDiemPanelLayout.setHorizontalGroup(
            importBangDiemPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(importBangDiemPanelLayout.createSequentialGroup()
                .addGroup(importBangDiemPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(importBangDiemPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(importBangDiemPanelLayout.createSequentialGroup()
                            .addGap(30, 30, 30)
                            .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 270, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, importBangDiemPanelLayout.createSequentialGroup()
                            .addGap(49, 49, 49)
                            .addComponent(chooseFileBangDiem, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(59, 59, 59)
                            .addComponent(fileNameBangDiem, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(importBangDiemPanelLayout.createSequentialGroup()
                            .addGap(115, 115, 115)
                            .addComponent(importBangDiemSubmit, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(importBangDiemPanelLayout.createSequentialGroup()
                        .addGap(49, 49, 49)
                        .addComponent(notify_importDiem, javax.swing.GroupLayout.PREFERRED_SIZE, 259, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(40, Short.MAX_VALUE))
        );
        importBangDiemPanelLayout.setVerticalGroup(
            importBangDiemPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(importBangDiemPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(36, 36, 36)
                .addGroup(importBangDiemPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(chooseFileBangDiem, javax.swing.GroupLayout.DEFAULT_SIZE, 40, Short.MAX_VALUE)
                    .addComponent(fileNameBangDiem, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addComponent(importBangDiemSubmit, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(notify_importDiem, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(41, Short.MAX_VALUE))
        );

        bangDiemBtn.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        bangDiemBtn.setText("Xem");
        bangDiemBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bangDiemBtnActionPerformed(evt);
            }
        });

        bangDiemTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "MSSV", "Họ tên", "Điểm GK", "Điểm CK", "Điểm khác", "Điểm tổng"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.Float.class, java.lang.Float.class, java.lang.Float.class, java.lang.Float.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane3.setViewportView(bangDiemTable);

        javax.swing.GroupLayout xemBangDiemPanelLayout = new javax.swing.GroupLayout(xemBangDiemPanel);
        xemBangDiemPanel.setLayout(xemBangDiemPanelLayout);
        xemBangDiemPanelLayout.setHorizontalGroup(
            xemBangDiemPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(xemBangDiemPanelLayout.createSequentialGroup()
                .addGap(170, 170, 170)
                .addComponent(bangDiemComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 211, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(47, 47, 47)
                .addComponent(bangDiemBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(205, Short.MAX_VALUE))
            .addComponent(jScrollPane3)
        );
        xemBangDiemPanelLayout.setVerticalGroup(
            xemBangDiemPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(xemBangDiemPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(xemBangDiemPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(bangDiemComboBox, javax.swing.GroupLayout.DEFAULT_SIZE, 38, Short.MAX_VALUE)
                    .addComponent(bangDiemBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(41, 41, 41)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setSize(new java.awt.Dimension(400, 300));

        xemDsLopSubmit.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        xemDsLopSubmit.setText("Xem");
        xemDsLopSubmit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                xemDsLopSubmitActionPerformed(evt);
            }
        });

        dsLopTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "STT", "MSSV", "Họ tên", "Giới tính", "CMND"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(dsLopTable);
        if (dsLopTable.getColumnModel().getColumnCount() > 0) {
            dsLopTable.getColumnModel().getColumn(1).setHeaderValue("MSSV");
        }

        javax.swing.GroupLayout xemDsLopPanelLayout = new javax.swing.GroupLayout(xemDsLopPanel);
        xemDsLopPanel.setLayout(xemDsLopPanelLayout);
        xemDsLopPanelLayout.setHorizontalGroup(
            xemDsLopPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(xemDsLopPanelLayout.createSequentialGroup()
                .addGap(166, 166, 166)
                .addComponent(DsLopComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 211, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(27, 27, 27)
                .addComponent(xemDsLopSubmit, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(240, Short.MAX_VALUE))
            .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING)
        );
        xemDsLopPanelLayout.setVerticalGroup(
            xemDsLopPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(xemDsLopPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(xemDsLopPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(xemDsLopSubmit)
                    .addComponent(DsLopComboBox))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 86, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        dsLopBtn.setText("Danh sách lớp");

        dsLopBtn_import.setText("Import danh sách lớp");
        dsLopBtn_import.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dsLopBtn_importActionPerformed(evt);
            }
        });
        dsLopBtn.add(dsLopBtn_import);

        dsLopBtn_xem.setText("Xem danh sách lớp");
        dsLopBtn_xem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dsLopBtn_xemActionPerformed(evt);
            }
        });
        dsLopBtn.add(dsLopBtn_xem);

        jMenuBar1.add(dsLopBtn);

        jMenu2.setText("Sinh viên");

        jMenuItem1.setText("Thêm sinh viên vào hệ thống");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        jMenu2.add(jMenuItem1);

        jMenuItem2.setText("Đăng kí học phần cho sinh viên");
        jMenu2.add(jMenuItem2);

        jMenuItem3.setText("Đăng kí học phần cho sinh viên");
        jMenu2.add(jMenuItem3);

        jMenuItem4.setText("Sửa điểm sinh viên");
        jMenu2.add(jMenuItem4);

        jMenuBar1.add(jMenu2);

        tkbBtn.setText("Thời khóa biểu");

        tkbBtn_import.setText("Import thời khóa biểu");
        tkbBtn_import.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tkbBtn_importActionPerformed(evt);
            }
        });
        tkbBtn.add(tkbBtn_import);

        tkbBtn_view.setText("Xem lại thời khóa biểu");
        tkbBtn_view.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tkbBtn_viewActionPerformed(evt);
            }
        });
        tkbBtn.add(tkbBtn_view);

        jMenuBar1.add(tkbBtn);

        jMenu1.setText("Bảng điểm");

        bangDiem_import.setText("Import bảng điểm");
        bangDiem_import.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bangDiem_importActionPerformed(evt);
            }
        });
        jMenu1.add(bangDiem_import);

        bangDiem_view.setText("Xem lại bảng điểm");
        bangDiem_view.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bangDiem_viewActionPerformed(evt);
            }
        });
        jMenu1.add(bangDiem_view);

        jMenuBar1.add(jMenu1);

        jMenu3.setText("Phúc khảo");

        jMenuItem5.setText("Tạo thời gian phúc khảo điểm");
        jMenu3.add(jMenuItem5);

        jMenuItem6.setText("Xem danh sách phúc khảo");
        jMenu3.add(jMenuItem6);

        jMenuBar1.add(jMenu3);

        changePasswd.setText("Đổi mật khẩu");
        changePasswd.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                changePasswdMouseClicked(evt);
            }
        });
        jMenuBar1.add(changePasswd);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 875, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(xemDsLopPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 926, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(xemDsLopPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void dsLopBtn_importActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dsLopBtn_importActionPerformed
        if (current_panel != null){
            current_panel.setVisible(false);
        }
        importDsLopPanel.setVisible(true);
        current_panel = importDsLopPanel;
    }//GEN-LAST:event_dsLopBtn_importActionPerformed

    private void dsLopBtn_xemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dsLopBtn_xemActionPerformed
        if (current_panel != null){
            current_panel.setVisible(false);
        }
        xemDsLopPanel.setVisible(true);
        current_panel = xemDsLopPanel;
        List<String> dsLop = SinhVienDAO.layDanhSachLop();
        DsLopComboBox.removeAllItems();
        dsLop.forEach(item -> {
            DsLopComboBox.addItem(item);
        });
        
        List<TkbLop> dsLopMon = TkbLopDAO.layDanhSachMonHocLop();
        dsLopMon.forEach(tkb -> {
            DsLopComboBox.addItem(tkb.getMaLop() + "-" + tkb.getMaMon());
        });
    }//GEN-LAST:event_dsLopBtn_xemActionPerformed

    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jMenuItem1ActionPerformed

    private void chooseFileBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chooseFileBtnActionPerformed
        JFileChooser fileChooser = new JFileChooser();
        FileNameExtensionFilter csvFilter = new FileNameExtensionFilter("csv","csv");
        fileChooser.setFileFilter(csvFilter);
        fileChooser.setMultiSelectionEnabled(false);
            
        int x = fileChooser.showDialog(this, "Chọn file");
        if (x==fileChooser.APPROVE_OPTION){
            file = fileChooser.getSelectedFile();
            fileNameLabel.setText(file.getName());
        }
    }//GEN-LAST:event_chooseFileBtnActionPerformed

    private void importDsLopSubmitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_importDsLopSubmitActionPerformed
        BufferedReader bufferedReader = null;
        try {
            bufferedReader = new BufferedReader(new FileReader(file));
        } catch (FileNotFoundException ex) {
            ex.printStackTrace();
            return;
        }
        String lop = "";
        while(true){
            String line;
            try {
                line = bufferedReader.readLine();
            } catch (IOException ex) {
                ex.printStackTrace();
                return;
            }
            if (line == null){
                file = null;
                return;
            }
            String[] arr = line.split(",");
            if (arr.length==1){
                lop = arr[0];
            }else{
                SinhVien sv = new SinhVien(Integer.valueOf(arr[0]),
                arr[1],arr[2],arr[3].equals("Nam")?1:0,arr[4],lop);
                System.out.println(sv.toString());
                SinhVienDAO.luuSinhVien(sv);
                UserSV user = new UserSV(arr[1],arr[1]);
                UserSVDAO.luuUserSV(user);
            }
        }
    }//GEN-LAST:event_importDsLopSubmitActionPerformed

    private void xemDsLopSubmitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_xemDsLopSubmitActionPerformed
        String lop = (String)DsLopComboBox.getSelectedItem();
        DefaultTableModel model = (DefaultTableModel)dsLopTable.getModel();
        model.setNumRows(0);
        String[] lop_split = lop.split("-");
        if (lop_split.length == 1){
            List<SinhVien> dsLop = SinhVienDAO.layDanhSachSinhVienTheoLop(lop);
            for (int i = 0; i < dsLop.size(); i++) {
                SinhVien sv = dsLop.get(i);
                model.addRow(new Object[]{i+1, sv.getMSSV(), sv.getHoTen()
                        ,sv.getGioiTinh()==1?"Nam":"Nữ", sv.getCMND()});
            }
        }else{
            List<TkbSV> dsLop = TkbSVDAO.layDanhSachTkbSVTheoLop(lop_split[0], lop_split[1]);
            for (int i = 0; i < dsLop.size(); i++) {
                SinhVien sv = SinhVienDAO.layThongTinSinhVien(dsLop.get(i).getMSSV());
                model.addRow(new Object[]{i+1, sv.getMSSV(), sv.getHoTen()
                        ,sv.getGioiTinh()==1?"Nam":"Nữ", sv.getCMND()});
            }
        }
    }//GEN-LAST:event_xemDsLopSubmitActionPerformed

    private void chooseFileTkbActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chooseFileTkbActionPerformed
        JFileChooser fileChooser = new JFileChooser();
        FileNameExtensionFilter csvFilter = new FileNameExtensionFilter("csv","csv");
        fileChooser.setFileFilter(csvFilter);
        fileChooser.setMultiSelectionEnabled(false);
            
        int x = fileChooser.showDialog(this, "Chọn file");
        if (x==fileChooser.APPROVE_OPTION){
            file = fileChooser.getSelectedFile();
            fileNameTkb.setText(file.getName());
        }
    }//GEN-LAST:event_chooseFileTkbActionPerformed

    private void importTkbSubmitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_importTkbSubmitActionPerformed
        BufferedReader bufferedReader = null;
        try {
            bufferedReader = new BufferedReader(new FileReader(file));
        } catch (FileNotFoundException ex) {
            ex.printStackTrace();
            return;
        }
        String lop = "";
        List<SinhVien> listSV = null;
        while(true){
            String line;
            try {
                line = bufferedReader.readLine();
            } catch (IOException ex) {
                ex.printStackTrace();
                return;
            }
            if (line == null){
                file = null;
                return;
            }
            String[] arr = line.split(",");
            if (arr.length==1){
                lop = arr[0];
                listSV = SinhVienDAO.layDanhSachSinhVienTheoLop(lop);
            }else{
                MonHoc mon = new MonHoc(arr[1],arr[2]);
                MonHocDAO.luuMonHoc(mon);
              
                TkbLop tkb = new TkbLop(Integer.valueOf(arr[0]),
                arr[1],lop,arr[3]);
                System.out.println(tkb.toString());
                TkbLopDAO.luuTkbLop(tkb);
                final String temp_lop = lop;
                listSV.forEach(sv -> {
                    TkbSV tkb_sv = new TkbSV();
                    tkb_sv.setMSSV(sv.getMSSV());
                    tkb_sv.setMaMon(arr[1]);
                    tkb_sv.setMaLop(temp_lop);
                    TkbSVDAO.luuTkbSv(tkb_sv);
                });
                
            }
        }
    }//GEN-LAST:event_importTkbSubmitActionPerformed

    private void tkbBtn_importActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tkbBtn_importActionPerformed
        if (current_panel != null){
            current_panel.setVisible(false);
        }
        importTkbPanel.setVisible(true);
        current_panel = importTkbPanel;
    }//GEN-LAST:event_tkbBtn_importActionPerformed

    private void tkbBtn_viewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tkbBtn_viewActionPerformed
        if (current_panel != null){
            current_panel.setVisible(false);
        }
        xemTkbPanel.setVisible(true);
        current_panel = xemTkbPanel;
        List<String> dsLop = SinhVienDAO.layDanhSachLop();
        TkbComboBox.removeAllItems();
        dsLop.forEach(item -> {
            TkbComboBox.addItem(item);
        });
        
    }//GEN-LAST:event_tkbBtn_viewActionPerformed

    private void xemTkbBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_xemTkbBtnActionPerformed
        List<TkbLop> tkbLop = TkbLopDAO.layDanhSachTkbLopTheoLop((String)TkbComboBox.getSelectedItem());
        DefaultTableModel model = (DefaultTableModel)TkbTable.getModel();
        model.setNumRows(0);
        tkbLop.forEach(tkb -> {
            MonHoc mh = MonHocDAO.layMonHoc(tkb.getMaMon());
            model.addRow(new Object[]{tkb.getSTT(), tkb.getMaMon(), mh.getTenMon()
                    ,tkb.getPhongHoc()});
        });
    }//GEN-LAST:event_xemTkbBtnActionPerformed

    private void changePasswdSubmitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_changePasswdSubmitActionPerformed
        if (newPasswd1.getPassword().length == 0 || newPasswd2.getPassword().length ==0 
                || currentPasswd.getPassword().length == 0){
            notify_changePasswd.setText("Các trường không được để trống.");
            return;
        }
        if (String.valueOf(newPasswd1.getPassword()).equals (String.valueOf(newPasswd2.getPassword()))){
            
            UserGiaoVu user = UserGiaoVuDAO.findUserByUsername("giaovu");
            if (!(user.getPassword()).equals(String.valueOf(currentPasswd.getPassword()))){
                notify_changePasswd.setText("Mật khẩu cũ không chính xác");
                return;
            }
            
            user.setPassword(String.valueOf(newPasswd1.getPassword()));
            UserGiaoVuDAO.updateUserGiaoVu(user);
            notify_changePasswd.setText("Đổi mật khẩu thành công");
        }else{
            notify_changePasswd.setText("Mật khẩu mới phải giống nhau trùng nhau");
        }
    }//GEN-LAST:event_changePasswdSubmitActionPerformed

    private void changePasswdMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_changePasswdMouseClicked
        if (current_panel != null){
            current_panel.setVisible(false);
        }
        changePasswdPanel.setVisible(true);
        current_panel = changePasswdPanel;
    }//GEN-LAST:event_changePasswdMouseClicked

    private void chooseFileBangDiemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chooseFileBangDiemActionPerformed
        JFileChooser fileChooser = new JFileChooser();
        FileNameExtensionFilter csvFilter = new FileNameExtensionFilter("csv","csv");
        fileChooser.setFileFilter(csvFilter);
        fileChooser.setMultiSelectionEnabled(false);
            
        int x = fileChooser.showDialog(this, "Chọn file");
        if (x==fileChooser.APPROVE_OPTION){
            file = fileChooser.getSelectedFile();
            fileNameBangDiem.setText(file.getName());
        }
    }//GEN-LAST:event_chooseFileBangDiemActionPerformed

    private void importBangDiemSubmitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_importBangDiemSubmitActionPerformed
        BufferedReader bufferedReader = null;
        try {
            bufferedReader = new BufferedReader(new FileReader(file));
        } catch (FileNotFoundException ex) {
            ex.printStackTrace();
            return;
        }
        String[] lop = {"",""};
        List<SinhVien> listSV = null;
        while(true){
            String line;
            try {
                line = bufferedReader.readLine();
            } catch (IOException ex) {
                ex.printStackTrace();
                notify_importDiem.setText("Import điểm thất bại.");
                return;
            }
            if (line == null){
                file = null;
                notify_importDiem.setText("Import điểm thành công.");
                return;
            }
            String[] arr = line.split(",");
            if (arr.length==1){
                lop = arr[0].split("-");
            }else{
                TkbSV tkb = new TkbSV(arr[0],lop[0],lop[1], 
                        Float.valueOf(arr[1]), Float.valueOf(arr[2]),
                        Float.valueOf(arr[3]), Float.valueOf(arr[4]));
                System.out.println(tkb.toString());
                TkbSVDAO.capNhapDiem(tkb);
            }
        }
    }//GEN-LAST:event_importBangDiemSubmitActionPerformed

    private void bangDiem_importActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bangDiem_importActionPerformed
        if (current_panel != null){
            current_panel.setVisible(false);
        }
        importBangDiemPanel.setVisible(true);
        current_panel = importBangDiemPanel;
    }//GEN-LAST:event_bangDiem_importActionPerformed

    private void bangDiemBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bangDiemBtnActionPerformed
        String[] lopmon = ((String)bangDiemComboBox.getSelectedItem()).split("-");
        List<TkbSV> tkbSv = TkbSVDAO.layDanhSachTkbSVTheoLop(lopmon[0], lopmon[1]);
        DefaultTableModel model = (DefaultTableModel)bangDiemTable.getModel();
        model.setNumRows(0);
        tkbSv.forEach(tkb -> {
            SinhVien sv = SinhVienDAO.layThongTinSinhVien(tkb.getMSSV());
            model.addRow(new Object[]{tkb.getMSSV(),sv.getHoTen(),tkb.getDiemGK(),
                tkb.getDiemCK(),tkb.getDiemKhac(),tkb.getDiemTong()});
        });
    }//GEN-LAST:event_bangDiemBtnActionPerformed

    private void bangDiem_viewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bangDiem_viewActionPerformed
        if (current_panel != null){
            current_panel.setVisible(false);
        }
        xemBangDiemPanel.setVisible(true);
        current_panel = xemBangDiemPanel;
        List<TkbLop> dsLop = TkbLopDAO.layDanhSachMonHocLop();
        bangDiemComboBox.removeAllItems();
        dsLop.forEach(item -> {
            bangDiemComboBox.addItem(item.getMaLop() + "-" + item.getMaMon());
        });
    }//GEN-LAST:event_bangDiem_viewActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MenuGiaoVu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MenuGiaoVu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MenuGiaoVu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MenuGiaoVu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        //Username = args[0];
        
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                MenuGiaoVu frame = new MenuGiaoVu();
                frame.setExtendedState(JFrame.MAXIMIZED_BOTH);
                frame.setVisible(true);
                //System.out.println(args[0]);
            }
        });
    }

    private File file = null;
    private static String Username = "";
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> DsLopComboBox;
    private javax.swing.JComboBox<String> TkbComboBox;
    private javax.swing.JTable TkbTable;
    private javax.swing.JButton bangDiemBtn;
    private javax.swing.JComboBox<String> bangDiemComboBox;
    private javax.swing.JTable bangDiemTable;
    private javax.swing.JMenuItem bangDiem_import;
    private javax.swing.JMenuItem bangDiem_view;
    private javax.swing.JMenu changePasswd;
    private javax.swing.JPanel changePasswdPanel;
    private javax.swing.JButton changePasswdSubmit;
    private javax.swing.JButton chooseFileBangDiem;
    private javax.swing.JButton chooseFileBtn;
    private javax.swing.JButton chooseFileTkb;
    private javax.swing.JPasswordField currentPasswd;
    private javax.swing.JMenu dsLopBtn;
    private javax.swing.JMenuItem dsLopBtn_import;
    private javax.swing.JMenuItem dsLopBtn_xem;
    private javax.swing.JTable dsLopTable;
    private javax.swing.JLabel fileNameBangDiem;
    private javax.swing.JLabel fileNameLabel;
    private javax.swing.JLabel fileNameTkb;
    private javax.swing.JPanel importBangDiemPanel;
    private javax.swing.JButton importBangDiemSubmit;
    private javax.swing.JPanel importDsLopPanel;
    private javax.swing.JButton importDsLopSubmit;
    private javax.swing.JPanel importTkbPanel;
    private javax.swing.JButton importTkbSubmit;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenu jMenu3;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JMenuItem jMenuItem3;
    private javax.swing.JMenuItem jMenuItem4;
    private javax.swing.JMenuItem jMenuItem5;
    private javax.swing.JMenuItem jMenuItem6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JPasswordField newPasswd1;
    private javax.swing.JPasswordField newPasswd2;
    private javax.swing.JLabel notify_changePasswd;
    private javax.swing.JLabel notify_importDiem;
    private javax.swing.JMenu tkbBtn;
    private javax.swing.JMenuItem tkbBtn_import;
    private javax.swing.JMenuItem tkbBtn_view;
    private javax.swing.JPanel xemBangDiemPanel;
    private javax.swing.JPanel xemDsLopPanel;
    private javax.swing.JButton xemDsLopSubmit;
    private javax.swing.JButton xemTkbBtn;
    private javax.swing.JPanel xemTkbPanel;
    // End of variables declaration//GEN-END:variables
}
